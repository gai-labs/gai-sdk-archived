# syntax=docker/dockerfile:1.2
FROM pytorch/pytorch:2.1.0-cuda11.8-cudnn8-devel AS base
ENV DEBIAN_FRONTEND=noninteractive PIP_PREFER_BINARY=1
ENV TORCH_CUDA_ARCH_LIST="7.5 8.0 8.6+PTX"

# Step 1: Install build utils
RUN --mount=type=cache,target=/var/cache/apt \
    --mount=type=cache,target=/var/lib/apt/lists \
    apt update -y && apt install -y git python3-dev build-essential vim-tiny wget && \
    pip install -U pip setuptools wheel && \
    rm -rf /var/lib/apt/lists/*

# Step 2a: Build exllamav2 wheel
WORKDIR /app
RUN git clone https://www.github.com/turboderp/exllamav2 && \
    cd exllamav2 && \
    git checkout b1c9020c2dcbf245f202100c29db002c9b46d4b2;
WORKDIR /app/exllamav2
RUN pip install -r requirements.txt && \
    python setup.py bdist_wheel && \
    mkdir /app/wheels && \
    cp /app/exllamav2/dist/*.whl /app/wheels

# Step 2b: Build llama-cpp-python wheel
WORKDIR /app/llama-cpp-python
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /app/wheels \
    llama-cpp-python \
    --extra-index-url https://abetlen.github.io/llama-cpp-python/whl/12.1 

# Step 3: Build Final
FROM pytorch/pytorch:2.3.0-cuda12.1-cudnn8-runtime AS final

ENV DEBIAN_FRONTEND=noninteractive PIP_PREFER_BINARY=1
RUN --mount=type=cache,target=/var/cache/apt \
    --mount=type=cache,target=/var/lib/apt/lists \
    apt update -y && apt install -y git && \
    pip install -U pip && \
    rm -rf /var/lib/apt/lists/*

ARG CATEGORY=ttt
ARG DEVICE=cuda
ENV CATEGORY=${CATEGORY}

#**OPTIONAL**: Install debugger
ARG DEBUG=1
RUN --mount=type=cache,target=/var/cache/apt \
    if [ "$DEBUG" = "1" ]; then \
        apt update && apt install -y curl procps netcat && \
        curl -sSL https://aka.ms/getvsdbgsh | bash /dev/stdin -v latest -l /vsdbg; \
    fi

# Create mount point for models
ENV MODEL_PATH="/app/models"
RUN echo '{"app_dir":"/app"}' > /root/.gairc    
WORKDIR /app/models

WORKDIR /app/wheels
COPY --from=base /app/wheels/exllamav2-0.1.4-cp310-cp310-linux_x86_64.whl /app/wheels
COPY --from=base /app/wheels/llama_cpp_python-0.2.77-cp310-cp310-linux_x86_64.whl /app/wheels

# Install Wheels
RUN if [ "$CATEGORY" = "ttt2" ]; then \
        pip install /app/wheels/exllamav2-0.1.4-cp310-cp310-linux_x86_64.whl && \
        pip install /app/wheels/llama_cpp_python-0.2.77-cp310-cp310-linux_x86_64.whl; \
    fi
WORKDIR /app

# Copy Source Code
COPY ./requirements_*.txt .
COPY ./setup.py ./gai.json ./
COPY ./gai ./gai
RUN ln -s /app/gai /src

# Install Gai
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install -r requirements_${CATEGORY}.txt
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install -e .
RUN pip install debugpy

# Start Server
WORKDIR /app/gai/api
CMD ["bash","-c","python ${CATEGORY}_api.py"]
