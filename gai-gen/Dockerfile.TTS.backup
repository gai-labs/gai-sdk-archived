# syntax=docker/dockerfile:1.2
#ARG BASE=kakkoii1337/cu118-cp310-base:1.0 AS base
ARG BASE=kakkoii1337/cu121-cp310-base:1.0 AS base
FROM ${BASE}

ARG CATEGORY=tts
ARG DEBUG=1
ARG DEVICE=cuda

# Install OS dependencies:
RUN --mount=type=cache,target=/var/cache/apt \
    --mount=type=cache,target=/var/lib/apt/lists \
    apt update && apt upgrade -y && \
    apt install -y --no-install-recommends \
    gcc g++ \
    make \
    git \
    python3 python3-dev python3-pip python3-venv python3-wheel \
    espeak-ng libsndfile1-dev \
    && rm -rf /var/lib/apt/lists/*

# Step 2: Create env variables
ENV LD_LIBRARY_PATH="/usr/local/cuda-11.8/lib64:/usr/lib/wsl/lib:$LD_LIBRARY_PATH"
ENV MODEL_PATH="/app/models"
RUN echo '{"app_dir":"/app"}' > /root/.gairc

# Step 3: Create mountpoint for models
WORKDIR /app/models

# Install Major Python Dependencies:
RUN DS_BUILD_TRANSFORMER_INFERENCE=1 pip install git+https://github.com/microsoft/DeepSpeed.git@v0.14.0
RUN pip3 install llvmlite --ignore-installed
#RUN pip3 install torch torchaudio --extra-index-url https://download.pytorch.org/whl/cu118
RUN rm -rf /root/.cache/pip

# Step 4: Install category specific requirements
WORKDIR /app
COPY "requirements_${CATEGORY}.txt" .
RUN pip install pip==23.3.1
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install -r requirements_${CATEGORY}.txt

# Step 5: Install category specific apps
RUN git clone https://github.com/coqui-ai/TTS
WORKDIR /app/TTS
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install \
    -r requirements.txt \
    -r requirements.dev.txt \
    -r requirements.ja.txt \
    -r requirements.notebooks.txt
RUN make install

# **OPTIONAL**: Install debugger
RUN --mount=type=cache,target=/var/cache/apt \
    if [ "$DEBUG" = "1" ]; then \
        apt update && apt install -y curl procps netcat && \
        curl -sSL https://aka.ms/getvsdbgsh | bash /dev/stdin -v latest -l /vsdbg; \
    fi

# Step 6: Install Gai
WORKDIR /app
COPY ./requirements_*.txt .
COPY ./setup.py ./gai.json ./
COPY ./gai ./gai
RUN ln -s /app/gai /src
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install -e .

# Step 7: Start server
ENV CATEGORY=${CATEGORY}
ENV DEVICE=${DEVICE}
WORKDIR /app/gai/api
ENTRYPOINT ["sh", "-c"]
CMD ["python ${CATEGORY}_api.py"]


